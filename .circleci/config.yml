version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: truong996/demo-deploy-swarm
    docker:
      - image: circleci/node:10

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout # check out the code in the project directory
      - setup_remote_docker
      - run: npm install
      - run: npm run build
      - run: echo $IMAGE_NAME
      - run: docker build -t $IMAGE_NAME -f prod.Dockerfile .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
      - save_cache: # Caches dependencies with a cache key
      # template for an environment variable,
      # see circleci.com/docs/2.0/caching/
          key: v1-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - node_modules
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace  
      - setup_remote_docker
      - restore_cache: # Restores the cached dependency.
          key: v1-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: echo $IMAGE_NAME
      - run: docker images
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            PREV_VERSION=0.0.${CIRCLE_BUILD_NUM}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$PREV_VERSION
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$PREV_VERSION
  deploy-dev:
    docker:
      - image: circleci/node:10
    steps:
      - setup_remote_docker
      - run: mkdir -pv ./.docker
      - run: touch ./.docker/ca.pem ./.docker/cert.pem ./.docker/key.pem
      - run: |
          pwd
          echo $CA_PEM > ./.docker/ca.pem
          echo $CERT_PEM > ./.docker/cert.pem
          echo $KEY_PEM > ./.docker/key.pem
          export DOCKER_HOST=$SWARM_HOST DOCKER_TLS_VERIFY=1
          echo $DOCKER_HOST
      - run: docker ps
      

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-dev:
          requires:
            - publish-latest
          filters:
            branches:
              only: master